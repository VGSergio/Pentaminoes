/* GUI class. The GUI has an options bar, the board and 
 * a text with the status of the game or some instructions
 */
package puzzle2dpentamino;

import java.awt.event.KeyEvent;
import javax.swing.*;

/**
 * @authors Sergio Vega     (43480752B)
 *          Andreas Korn    (X4890193W)
 */
public class GUI extends JFrame{

    private Board Board;
    private int Rows = 6, Columns = 10;
    private int Speed;
    private final int FixWidth = 6;
    private final int FixHeight = 10;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        GenerateBoard(Rows, Columns);
    }

    /**
     * Creates a new empty board
     */
    private void GenerateBoard(int rows, int columns){
        if (Board!=null){                                                                   //Tablero inicializado
            setSize(-FixWidth, getHeight()-Board.getHeight()+FixHeight);                    //Reseteamos tamaño frame
            getContentPane().remove(Board);                                                 //Borramos tablero anterior
        }                                                
        Board = new Board(rows, columns);                                                   //Genera un nuevo tablero
        getContentPane().add(Board);                                                        //Añadimos nuevo tablero
        setSize(Board.getWidth()+FixWidth, getHeight()+Board.getHeight()-FixHeight);        //Adapta el tamaño del frame
        setLocationRelativeTo(null);                                                        //Centra el frame 
        setResizable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuBar = new javax.swing.JMenuBar();
        ControlMenu = new javax.swing.JMenu();
        SolveOption = new javax.swing.JMenuItem();
        ResetOption = new javax.swing.JMenuItem();
        ExitOption = new javax.swing.JMenuItem();
        SpeedMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        SizeMenu = new javax.swing.JMenu();
        BoardSize1 = new javax.swing.JMenuItem();
        BoardSize2 = new javax.swing.JMenuItem();
        BoardSize3 = new javax.swing.JMenuItem();
        BoardSize4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Puzzle2DPentominos");
        setSize(new java.awt.Dimension(1000, 1000));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        MenuBar.setSelectionModel(MenuBar.getSelectionModel());

        ControlMenu.setText("Control");

        SolveOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SolveOption.setText("Solve");
        ControlMenu.add(SolveOption);

        ResetOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        ResetOption.setText("Reset");
        ResetOption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ResetOptionMouseReleased(evt);
            }
        });
        ControlMenu.add(ResetOption);

        ExitOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        ExitOption.setText("Exit");
        ExitOption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ExitOptionMouseReleased(evt);
            }
        });
        ControlMenu.add(ExitOption);

        MenuBar.add(ControlMenu);

        SpeedMenu.setText("Speed");

        jMenuItem1.setText("jMenuItem1");
        SpeedMenu.add(jMenuItem1);

        MenuBar.add(SpeedMenu);

        SizeMenu.setText("Size");

        BoardSize1.setText("6 x 10");
        BoardSize1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BoardSize1MouseReleased(evt);
            }
        });
        SizeMenu.add(BoardSize1);

        BoardSize2.setText("5 x 12");
        BoardSize2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BoardSize2MouseReleased(evt);
            }
        });
        SizeMenu.add(BoardSize2);

        BoardSize3.setText("4 x 15");
        BoardSize3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BoardSize3MouseReleased(evt);
            }
        });
        SizeMenu.add(BoardSize3);

        BoardSize4.setText("3 x 20");
        BoardSize4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BoardSize4MouseReleased(evt);
            }
        });
        SizeMenu.add(BoardSize4);

        MenuBar.add(SizeMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 549, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BoardSize1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoardSize1MouseReleased
        GenerateBoard(6,10);
        Rows = 6;  Columns = 10;
        evt.consume();
    }//GEN-LAST:event_BoardSize1MouseReleased

    private void BoardSize2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoardSize2MouseReleased
        GenerateBoard(5,12);
        Rows = 5;  Columns = 12;
        evt.consume();
    }//GEN-LAST:event_BoardSize2MouseReleased

    private void BoardSize3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoardSize3MouseReleased
        GenerateBoard(4,15);
        Rows = 4;  Columns = 15;
        evt.consume();
    }//GEN-LAST:event_BoardSize3MouseReleased

    private void BoardSize4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoardSize4MouseReleased
        GenerateBoard(3,20);
        Rows = 3;  Columns = 20;
        evt.consume();
    }//GEN-LAST:event_BoardSize4MouseReleased

    private void ExitOptionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitOptionMouseReleased
        System.exit(0);
    }//GEN-LAST:event_ExitOptionMouseReleased

    private void ResetOptionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetOptionMouseReleased
        GenerateBoard(Rows, Columns);
        evt.consume();
    }//GEN-LAST:event_ResetOptionMouseReleased

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        if (evt.getY() > getInsets().top + MenuBar.getHeight()){
            int x = evt.getX()-FixWidth/2;
            int y = evt.getY()+FixHeight;
            evt.consume();
            Board.blockSquare(x, y);
            repaint();
        }
    }//GEN-LAST:event_formMouseReleased

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        int key = evt.getKeyCode();
        if (evt.isControlDown() && (key == KeyEvent.VK_E)){
            System.exit(0);
            evt.consume();
        }
        else if (evt.isControlDown() && (key == KeyEvent.VK_R)){
            GenerateBoard(Rows, Columns);
            evt.consume();
        }
        else if (evt.isControlDown() && (key == KeyEvent.VK_S)){
            
            evt.consume();
        }
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);     //Inicia el puzzle
            }
        });
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BoardSize1;
    private javax.swing.JMenuItem BoardSize2;
    private javax.swing.JMenuItem BoardSize3;
    private javax.swing.JMenuItem BoardSize4;
    private javax.swing.JMenu ControlMenu;
    private javax.swing.JMenuItem ExitOption;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem ResetOption;
    private javax.swing.JMenu SizeMenu;
    private javax.swing.JMenuItem SolveOption;
    private javax.swing.JMenu SpeedMenu;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables

}
